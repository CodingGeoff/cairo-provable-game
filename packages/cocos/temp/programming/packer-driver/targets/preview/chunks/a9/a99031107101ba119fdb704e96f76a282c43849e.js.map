{"version":3,"sources":["file:///Users/ruoyan/Desktop/WorkSpace/cairo-provable-game/packages/cocos/assets/script/util/message/prompt.ts"],"names":["preloadPrompt","nodePool","Prefab","node","get","put","prompt","co","parent","find","addChild","holPromptMessage","getComponent","setContent","Promise","res","listen","load","getNodePool","HolPromptMessage"],"mappings":";;;;;;;;;AAWA;WANsBA,a;;;;;uCAAf,aAA+B;AAClC,UAAMC,QAAQ,GAAG;AAAA;AAAA,4CAAkB;AAAA;AAAA,wBAAK,yBAAL,EAAiCC,MAAjC,CAAlB,CAAjB;AACA,UAAMC,IAAI,GAAGF,QAAQ,CAACG,GAAT,EAAb;AACAH,MAAAA,QAAQ,CAACI,GAAT,CAAaF,IAAb;AACH,K;;;;WAGqBG,M;;;;;gCAAf,WAAsBC,EAAtB,EAAgDC,MAAhD,EAA8F;AAAA,UAA9CA,MAA8C;AAA9CA,QAAAA,MAA8C,GAA/BC,IAAI,CAAC,QAAD,CAA2B;AAAA;;AACjG,UAAMR,QAAQ,GAAG;AAAA;AAAA,4CAAkB;AAAA;AAAA,wBAAK,yBAAL,EAAiCC,MAAjC,CAAlB,CAAjB;AACA,UAAMC,IAAI,GAAGF,QAAQ,CAACG,GAAT,EAAb;AACAI,MAAAA,MAAM,CAACE,QAAP,CAAgBP,IAAhB;AACA,UAAMQ,gBAAgB,GAAGR,IAAI,CAACS,YAAL;AAAA;AAAA,+CAAzB;AACAD,MAAAA,gBAAgB,CAACE,UAAjB,CAA4BN,EAA5B;AACA,aAAO,IAAIO,OAAJ,CAAYC,GAAG,IAAI;AACtBJ,QAAAA,gBAAgB,CAACK,MAAjB,CAAwB,OAAxB,EAAkC,MAAM;AACpCf,UAAAA,QAAQ,CAACI,GAAT,CAAaF,IAAb;AACAY,UAAAA,GAAG;AACN,SAHD;AAIA;AACH,OANM,CAAP;AAOH,K;;;;;;;;;;;;;;;;;;;;;mBApBqBf,a;YAOAM;;;;;;;;;;AAZbJ,MAAAA,M,OAAAA,M;AAAQO,MAAAA,I,OAAAA,I;;AACRQ,MAAAA,I,iBAAAA,I;;AACAC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,gB,iBAAAA,gB","sourcesContent":["import { Prefab, find , Node} from \"cc\";\nimport { load } from \"../bundle/load\";\nimport { getNodePool } from \"../resource/getNodePool\";\nimport { HolPromptMessage, PromptMessageOption } from \"../../prefab/HolPromptMessage\";\n\nexport async function preloadPrompt() {\n    const nodePool = getNodePool(await load(\"prefab/HolPromptMessage\" , Prefab))\n    const node = nodePool.get()\n    nodePool.put(node)\n}\n\n// 弹出消息 返回一个Promise 确认的话返回 true 否则返回 false\nexport async function prompt(co: PromptMessageOption , parent: Node = find(\"Canvas\")): Promise<void> {\n    const nodePool = getNodePool(await load(\"prefab/HolPromptMessage\" , Prefab))\n    const node = nodePool.get()\n    parent.addChild(node)\n    const holPromptMessage = node.getComponent(HolPromptMessage)\n    holPromptMessage.setContent(co)\n    return new Promise(res => {\n        holPromptMessage.listen(\"close\" , () => {\n            nodePool.put(node)\n            res()\n        })\n        return\n    })\n}"]}