{"version":3,"sources":["file:///Users/ruoyan/Desktop/WorkSpace/cairo-provable-game/packages/cocos/assets/script/util/message/load.ts"],"names":["preloadLoad","nodePool","Prefab","node","get","put","load","co","parent","find","addChild","holLoadMessage","getComponent","listen","closeLoad","bundleLoad","getNodePool","HolLoadMessage"],"mappings":";;;;;;;;;AAWA;WANsBA,W;;;;;qCAAf,aAA6B;AAChC,UAAMC,QAAQ,GAAG;AAAA;AAAA,4CAAkB;AAAA;AAAA,oCAAW,uBAAX,EAAqCC,MAArC,CAAlB,CAAjB;AACA,UAAMC,IAAI,GAAGF,QAAQ,CAACG,GAAT,EAAb;AACAH,MAAAA,QAAQ,CAACI,GAAT,CAAaF,IAAb;AACH,K;;;;WAGqBG,I;;;;;8BAAf,WAAoBC,EAApB,EAA6CC,MAA7C,EAA+F;AAAA,UAAlDA,MAAkD;AAAlDA,QAAAA,MAAkD,GAAnCC,IAAI,CAAC,QAAD,CAA+B;AAAA;;AAClG,UAAMR,QAAQ,GAAG;AAAA;AAAA,4CAAkB;AAAA;AAAA,oCAAW,uBAAX,EAAqCC,MAArC,CAAlB,CAAjB;AACA,UAAMC,IAAI,GAAGF,QAAQ,CAACG,GAAT,EAAb;AACAI,MAAAA,MAAM,CAACE,QAAP,CAAgBP,IAAhB;AACA,UAAMQ,cAAc,GAAGR,IAAI,CAACS,YAAL;AAAA;AAAA,2CAAvB;AACAD,MAAAA,cAAc,CAACE,MAAf,CAAsB,OAAtB,EAAgC,MAAMZ,QAAQ,CAACI,GAAT,CAAaF,IAAb,CAAtC;AACA,aAAO,MAAMQ,cAAc,CAACG,SAAf,EAAb;AACH,K;;;;;;;;;;;;;;;;;;;;;iBAdqBd,W;UAOAM;;;;;;;;;AAZbJ,MAAAA,M,OAAAA,M;AAAQO,MAAAA,I,OAAAA,I;;AACAM,MAAAA,U,iBAART,I;;AACAU,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,c,iBAAAA,c","sourcesContent":["import { Prefab, find , Node} from \"cc\";\nimport { load as bundleLoad } from \"../bundle/load\";\nimport { getNodePool } from \"../resource/getNodePool\";\nimport { HolLoadMessage, LoadMessageOption } from \"../../prefab/HolLoadMessage\";\n\nexport async function preloadLoad() {\n    const nodePool = getNodePool(await bundleLoad(\"prefab/HolLoadMessage\" , Prefab))\n    const node = nodePool.get()\n    nodePool.put(node)\n}\n\n// 加载中\nexport async function load(co?: LoadMessageOption , parent: Node = find(\"Canvas\")): Promise<Function> {\n    const nodePool = getNodePool(await bundleLoad(\"prefab/HolLoadMessage\" , Prefab))\n    const node = nodePool.get()\n    parent.addChild(node)\n    const holLoadMessage = node.getComponent(HolLoadMessage)\n    holLoadMessage.listen(\"close\" , () => nodePool.put(node))\n    return () => holLoadMessage.closeLoad()\n}"]}