{"version":3,"sources":["file:///Users/ruoyan/Desktop/WorkSpace/LegendOfWarcraftHeroes/assets/script/prefab/HolIntroduceMessage.ts"],"names":["_decorator","Component","Label","Node","ccclass","property","HolIntroduceMessage","$closeQueue","listen","e","fn","push","setContent","option","ContentNode","getComponent","string","message","introduceNode","node","getChildByName","buttonOne","active","on","callback","closeNode","buttonTwo","off","close"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAwBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;;;;;;;;OAC9C;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;qCAkBjBM,mB,WADZF,OAAO,CAAC,qBAAD,C,UAGHC,QAAQ,CAACF,IAAD,C,2BAHb,MACaG,mBADb,SACyCL,SADzC,CACmD;AAAA;AAAA;;AAAA;;AAAA,eAKvCM,WALuC,GAKb,EALa;AAAA;;AAO/CC,QAAAA,MAAM,CAACC,CAAD,EAAcC,EAAd,EAA4B;AAC9B,cAAID,CAAC,KAAK,OAAV,EAAmB,KAAKF,WAAL,CAAiBI,IAAjB,CAAsBD,EAAtB;AACtB,SAT8C,CAW/C;;;AACOE,QAAAA,UAAU,CAACC,MAAD,EAA6B;AAAA;;AAC1C,eAAKC,WAAL,CAAiBC,YAAjB,CAA8Bb,KAA9B,EAAqCc,MAArC,GAA8CH,MAAM,CAACI,OAArD;AACA,cAAMC,aAAa,GAAG,KAAKC,IAAL,CAAUC,cAAV,CAAyB,WAAzB,CAAtB;;AACA,cAAIP,MAAM,CAACQ,SAAX,EAAsB;AAClB,gBAAMA,SAAS,GAAGH,aAAa,CAACE,cAAd,CAA6B,WAA7B,CAAlB;AACAC,YAAAA,SAAS,CAACD,cAAV,CAAyB,OAAzB,EAAkCL,YAAlC,CAA+Cb,KAA/C,EAAsDc,MAAtD,GAA+DH,MAAM,CAACQ,SAAP,CAAiBJ,OAAhF;AACAI,YAAAA,SAAS,CAACC,MAAV,GAAmB,IAAnB;AACAD,YAAAA,SAAS,CAACE,EAAV,CAAa,OAAb,iCAAuB,aAAY;AAC/B,oBAAMV,MAAM,CAACQ,SAAP,CAAiBG,QAAjB,EAAN;;AACA,cAAA,KAAI,CAACC,SAAL;AACH,aAHD;AAIH;;AACD,cAAIZ,MAAM,CAACa,SAAX,EAAsB;AAClB,gBAAMA,SAAS,GAAGR,aAAa,CAACE,cAAd,CAA6B,WAA7B,CAAlB;AACAM,YAAAA,SAAS,CAACN,cAAV,CAAyB,OAAzB,EAAkCL,YAAlC,CAA+Cb,KAA/C,EAAsDc,MAAtD,GAA+DH,MAAM,CAACa,SAAP,CAAiBT,OAAhF;AACAS,YAAAA,SAAS,CAACJ,MAAV,GAAmB,IAAnB;AACAI,YAAAA,SAAS,CAACH,EAAV,CAAa,OAAb,iCAAuB,aAAY;AAC/B,oBAAMV,MAAM,CAACa,SAAP,CAAiBF,QAAjB,EAAN;;AACA,cAAA,KAAI,CAACC,SAAL;AACH,aAHD;AAIH;AACJ,SAjC8C,CAmC/C;;;AACOA,QAAAA,SAAS,GAAG;AACf,cAAMP,aAAa,GAAG,KAAKC,IAAL,CAAUC,cAAV,CAAyB,WAAzB,CAAtB;AACAF,UAAAA,aAAa,CAACE,cAAd,CAA6B,WAA7B,EAA0CO,GAA1C,CAA8C,OAA9C;AACAT,UAAAA,aAAa,CAACE,cAAd,CAA6B,WAA7B,EAA0CO,GAA1C,CAA8C,OAA9C;;AACA,eAAK,IAAMC,KAAX,IAAoB,KAAKrB,WAAzB,EAAsCqB,KAAK;AAC9C;;AAzC8C,O","sourcesContent":["import { _decorator, Component, Event, find, Label, Node, NodeEventType } from 'cc';\nconst { ccclass, property } = _decorator;\n\nexport type HolIntroduceOption = {\n    // 内容\n    message: string ,\n    // 按钮一\n    buttonOne?: {\n        message: string ,\n        callback: any\n    } ,\n    // 按钮二\n    buttonTwo?: {\n        message: string ,\n        callback: any\n    } ,\n}\n\n@ccclass('HolIntroduceMessage')\nexport class HolIntroduceMessage extends Component {\n\n    @property(Node)\n    ContentNode: Node\n\n    private $closeQueue: Function[] = []\n\n    listen(e: \"close\" , fn: Function) {\n        if (e === \"close\") this.$closeQueue.push(fn)\n    }\n\n    // 设置内容\n    public setContent(option: HolIntroduceOption) {\n        this.ContentNode.getComponent(Label).string = option.message\n        const introduceNode = this.node.getChildByName(\"Introduce\")\n        if (option.buttonOne) {\n            const buttonOne = introduceNode.getChildByName(\"ButtonOne\")\n            buttonOne.getChildByName(\"Value\").getComponent(Label).string = option.buttonOne.message\n            buttonOne.active = true\n            buttonOne.on(\"click\" , async () => {\n                await option.buttonOne.callback()\n                this.closeNode()\n            })\n        }\n        if (option.buttonTwo) {\n            const buttonTwo = introduceNode.getChildByName(\"ButtonTwo\")\n            buttonTwo.getChildByName(\"Value\").getComponent(Label).string = option.buttonTwo.message\n            buttonTwo.active = true\n            buttonTwo.on(\"click\" , async () => {\n                await option.buttonTwo.callback()\n                this.closeNode()\n            })\n        }\n    }\n    \n    // 关闭函数\n    public closeNode() {\n        const introduceNode = this.node.getChildByName(\"Introduce\")\n        introduceNode.getChildByName(\"ButtonOne\").off(\"click\")\n        introduceNode.getChildByName(\"ButtonTwo\").off(\"click\")\n        for (const close of this.$closeQueue) close()\n    }\n\n}\n\n"]}