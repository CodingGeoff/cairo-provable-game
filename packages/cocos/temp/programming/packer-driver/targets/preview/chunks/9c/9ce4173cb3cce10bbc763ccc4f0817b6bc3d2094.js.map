{"version":3,"sources":["file:///Users/ruoyan/Desktop/WorkSpace/LegendOfWarcraftHeroes/assets/script/scenes/Fight/Canvas/FightMap.ts"],"names":["_decorator","Component","instantiate","math","NodeEventType","Prefab","Sprite","SpriteFrame","util","HolCharacter","RoundState","common","HolPreLoad","ccclass","property","FightMap","currentRound","isPlayAnimation","allRoundQueue","Map","allLiveCharacter","allDeadCharacter","actionAwaitQueue","start","holPreLoad","node","parent","getChildByName","getComponent","setTips","setProcess","images","bundle","loadDir","spriteFrame","Math","floor","randomRange","length","process","character","leftCharacter","setCharacter","size","rightCharacter","listenComplete","Promise","res","setTimeout","result","fightStart","fightSuccess","fightEnd","listenRoundEvent","round","call","roundEvents","get","set","push","buff","state","OnFightBegan","equipment","roundState","concat","sort","a","b","speed","task","indexOf","OnRoundBegan","action","all","filter","c","direction","OnRoundEnd","create","direct","coordinate","holCharacterPrefab","load","addChild","holCharacter","initCharacter","on","NODE_DESTROYED","removeChild","active"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;AAAYC,MAAAA,a,OAAAA,a;AAAeC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;AAC/EC,MAAAA,I,iBAAAA,I;;AACAC,MAAAA,Y,iBAAAA,Y;;AAGAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,M,iBAAAA,M;;AACAC,MAAAA,U,iBAAAA,U;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBd,U;;0BAGjBe,Q,WADZF,OAAO,CAAC,UAAD,C,gBAAR,MACaE,QADb,SAC8Bd,SAD9B,CACwC;AAAA;AAAA;AAEpC;AAFoC,eAGpCe,YAHoC,GAGb,CAHa;AAKpC;AALoC,eAMpCC,eANoC,GAMT,IANS;AAQpC;AARoC,eASpCC,aAToC,GASM,IAAIC,GAAJ,EATN;AAWpC;AAXoC,eAYpCC,gBAZoC,GAYD,EAZC;AAcpC;AAdoC,eAepCC,gBAfoC,GAeD,EAfC;AAiBpC;AAjBoC,eAkBpCC,gBAlBoC,GAkBD,EAlBC;AAAA;;AAoBpBC,QAAAA,KAAK,GAAG;AAAA;;AAAA;AACpB;AACA,gBAAMC,UAAU,GAAG,KAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBC,cAAjB,CAAgC,YAAhC,EAA8CC,YAA9C;AAAA;AAAA,yCAAnB;;AACAJ,YAAAA,UAAU,CAACK,OAAX,CAAmB,CACf,UADe,CAAnB;AAGAL,YAAAA,UAAU,CAACM,UAAX,CAAsB,EAAtB,EANoB,CAOpB;;AACA,gBAAMC,MAAM,SAAS;AAAA;AAAA,8BAAKC,MAAL,CAAYC,OAAZ,CAAoB,gBAApB,EAAuC1B,WAAvC,CAArB;AACA,YAAA,KAAI,CAACkB,IAAL,CAAUG,YAAV,CAAuBtB,MAAvB,EAA+B4B,WAA/B,GAA6CH,MAAM,CAACI,IAAI,CAACC,KAAL,CAAWjC,IAAI,CAACkC,WAAL,CAAiB,CAAjB,EAAmBN,MAAM,CAACO,MAA1B,CAAX,CAAD,CAAnD;AACAd,YAAAA,UAAU,CAACM,UAAX,CAAsB,EAAtB,EAVoB,CAWpB;;AACA,gBAAIS,OAAO,GAAG,EAAd,CAZoB,CAapB;;AACA,iBAAK,IAAMC,SAAX,IAAwB;AAAA;AAAA,kCAAOC,aAA/B,EAA8C;AAC1C,oBAAM,KAAI,CAACC,YAAL,CAAkBF,SAAS,CAAC,CAAD,CAA3B,EAAiC,MAAjC,EAA0CA,SAAS,CAAC,CAAD,CAAnD,CAAN;AACAhB,cAAAA,UAAU,CAACM,UAAX,CAAsBS,OAAO,GAAGA,OAAO,GAAG,KAAK;AAAA;AAAA,oCAAOE,aAAP,CAAqBE,IAApE;AACH;;AACD,iBAAK,IAAMH,UAAX,IAAwB;AAAA;AAAA,kCAAOI,cAA/B,EAA+C;AAC3C,oBAAM,KAAI,CAACF,YAAL,CAAkBF,UAAS,CAAC,CAAD,CAA3B,EAAiC,OAAjC,EAA2CA,UAAS,CAAC,CAAD,CAApD,CAAN;AACAhB,cAAAA,UAAU,CAACM,UAAX,CAAsBS,OAAO,GAAGA,OAAO,GAAG,KAAK;AAAA;AAAA,oCAAOK,cAAP,CAAsBD,IAArE;AACH,aArBmB,CAsBpB;;;AACAnB,YAAAA,UAAU,CAACqB,cAAX,iCAA0B,aAAY;AAClC,oBAAM,IAAIC,OAAJ,CAAYC,GAAG,IAAIC,UAAU,CAACD,GAAD,EAAM,GAAN,CAA7B,CAAN,CADkC,CAElC;;AACA,kBAAME,MAAM,SAAS,KAAI,CAACC,UAAL,EAArB,CAHkC,CAIlC;;AACA,kBAAID,MAAJ,EAAY,KAAI,CAACE,YAAL,GAAZ,CACA;AADA,mBAEK,KAAI,CAACC,QAAL;AACR,aARD,GAvBoB,CAgCpB;;AACA5B,YAAAA,UAAU,CAACM,UAAX,CAAsB,GAAtB;AAjCoB;AAkCvB,SAtDmC,CAwDpC;;;AACOuB,QAAAA,gBAAgB,CAACC,KAAD,EAAiBC,IAAjB,EAAiC;AACpD,cAAIC,WAAW,GAAG,KAAKtC,aAAL,CAAmBuC,GAAnB,CAAuB,KAAKzC,YAAL,GAAoBsC,KAApB,GAA4B,CAAnD,CAAlB;AACA,cAAI,CAACE,WAAL,EACI,OAAO,KAAKtC,aAAL,CAAmBwC,GAAnB,CAAuB,KAAK1C,YAAL,GAAoBsC,KAApB,GAA4B,CAAnD,EAAuDE,WAAW,GAAG,CAACD,IAAD,CAArE,CAAP;AACJC,UAAAA,WAAW,CAACG,IAAZ,CAAiBJ,IAAjB;AACH,SA9DmC,CAgEpC;;;AACcL,QAAAA,UAAU,GAAqB;AAAA;;AAAA;AACzC;AACA,iBAAK,IAAMV,SAAX,IAAwB,MAAI,CAACpB,gBAA7B,EAA+C;AAC3C,mBAAK,IAAMwC,IAAX,IAAmBpB,SAAS,CAACqB,KAAV,CAAgBD,IAAnC,EACI,MAAMA,IAAI,CAACE,YAAL,CAAkBF,IAAlB,EAAyB,MAAzB,CAAN;;AACJ,mBAAK,IAAMG,SAAX,IAAwBvB,SAAS,CAACqB,KAAV,CAAgBE,SAAxC,EACI,MAAMA,SAAS,CAACD,YAAV,CAAuBC,SAAvB,EAAmC,MAAnC,CAAN;;AACJ,oBAAMvB,SAAS,CAACqB,KAAV,CAAgBC,YAAhB,CAA6BtB,SAAS,CAACqB,KAAvC,EAA+C,MAA/C,CAAN;AACH,aARwC,CASzC;;;AACA,mBAAM,MAAI,CAAC7C,YAAL,IAAqB,GAA3B,EAAgC;AAC5B,kBAAMgD,UAAU,GAAG;AAAA;AAAA,6CAAnB;AACA,kBAAM5C,gBAAgB,GAAG,GAAG6C,MAAH,CAAU,MAAI,CAAC7C,gBAAf,EAAiC8C,IAAjC,CAAsC,CAACC,CAAD,EAAKC,CAAL,KAC3DA,CAAC,CAACP,KAAF,CAAQQ,KAAR,GAAgBF,CAAC,CAACN,KAAF,CAAQQ,KADH,CAAzB,CAF4B,CAK5B;;AACA,mBAAK,IAAMC,IAAX,IAAmB,MAAI,CAACpD,aAAL,CAAmBuC,GAAnB,CAAuB,MAAI,CAACzC,YAA5B,KAA6C,EAAhE,EAAoE,MAAMsD,IAAI,EAAV,CANxC,CAO5B;;;AACA,mBAAK,IAAM9B,WAAX,IAAwBpB,gBAAxB,EAA0C;AACtC,oBAAI,MAAI,CAACA,gBAAL,CAAsBmD,OAAtB,CAA8B/B,WAA9B,MAA6C,CAAC,CAAlD,EAAqD;;AACrD,qBAAK,IAAMoB,KAAX,IAAmBpB,WAAS,CAACqB,KAAV,CAAgBD,IAAnC,EACI,MAAMA,KAAI,CAACY,YAAL,CAAkBZ,KAAlB,EAAyBI,UAAzB,EAAsC,MAAtC,CAAN;;AACJ,qBAAK,IAAMD,UAAX,IAAwBvB,WAAS,CAACqB,KAAV,CAAgBE,SAAxC,EACI,MAAMA,UAAS,CAACS,YAAV,CAAuBT,UAAvB,EAAmCC,UAAnC,EAAgD,MAAhD,CAAN;;AACJ,sBAAMxB,WAAS,CAACqB,KAAV,CAAgBW,YAAhB,CAA6BhC,WAAS,CAACqB,KAAvC,EAA+CG,UAA/C,EAA4D,MAA5D,CAAN;AACH,eAf2B,CAgB5B;;;AACA,mBAAK,IAAMxB,WAAX,IAAwBpB,gBAAxB,EAA0C;AACtC,oBAAI,MAAI,CAACA,gBAAL,CAAsBmD,OAAtB,CAA8B/B,WAA9B,MAA6C,CAAC,CAAlD,EAAqD;AACrD,sBAAMA,WAAS,CAACiC,MAAV,EAAN,CAFsC,CAGtC;;AACA,sBAAM3B,OAAO,CAAC4B,GAAR,CAAY,MAAI,CAACpD,gBAAjB,CAAN;AACA,gBAAA,MAAI,CAACA,gBAAL,GAAwB,EAAxB,CALsC,CAMtC;;AACA,oBAAI,MAAI,CAACF,gBAAL,CAAsBuD,MAAtB,CAA6BC,CAAC,IAAIA,CAAC,CAACC,SAAF,KAAgB,MAAlD,EAA0DvC,MAA1D,IAAoE,CAAxE,EAA2E,OAAO,KAAP,CAA3E,KACK,IAAI,MAAI,CAAClB,gBAAL,CAAsBuD,MAAtB,CAA6BC,CAAC,IAAIA,CAAC,CAACC,SAAF,KAAgB,OAAlD,EAA2DvC,MAA3D,IAAqE,CAAzE,EAA4E,OAAO,IAAP;AACpF,eA1B2B,CA2B5B;;;AACA,mBAAK,IAAME,WAAX,IAAwBpB,gBAAxB,EAA0C;AACtC,oBAAI,MAAI,CAACA,gBAAL,CAAsBmD,OAAtB,CAA8B/B,WAA9B,MAA6C,CAAC,CAAlD,EAAqD;;AACrD,qBAAK,IAAMoB,MAAX,IAAmBpB,WAAS,CAACqB,KAAV,CAAgBD,IAAnC,EACI,MAAMA,MAAI,CAACkB,UAAL,CAAgBlB,MAAhB,EAAuBI,UAAvB,EAAoC,MAApC,CAAN;;AACJ,qBAAK,IAAMD,WAAX,IAAwBvB,WAAS,CAACqB,KAAV,CAAgBE,SAAxC,EACI,MAAMA,WAAS,CAACe,UAAV,CAAqBf,WAArB,EAAiCC,UAAjC,EAA8C,MAA9C,CAAN;;AACJ,sBAAMxB,WAAS,CAACqB,KAAV,CAAgBiB,UAAhB,CAA2BtC,WAAS,CAACqB,KAArC,EAA6CG,UAA7C,EAA0D,MAA1D,CAAN;AACH;;AACD,cAAA,MAAI,CAAChD,YAAL,GApC4B,CAqC5B;;AACA,kBAAI,MAAI,CAACC,eAAT,EAA0B,MAAM,IAAI6B,OAAJ,CAAYC,GAAG,IAAIC,UAAU,CAACD,GAAD,EAAM,GAAN,CAA7B,CAAN,CAtCE,CAuC5B;;AACA,kBAAI,MAAI,CAAC3B,gBAAL,CAAsBuD,MAAtB,CAA6BC,CAAC,IAAIA,CAAC,CAACC,SAAF,KAAgB,MAAlD,EAA0DvC,MAA1D,IAAoE,CAAxE,EAA2E,OAAO,KAAP,CAA3E,KACK,IAAI,MAAI,CAAClB,gBAAL,CAAsBuD,MAAtB,CAA6BC,CAAC,IAAIA,CAAC,CAACC,SAAF,KAAgB,OAAlD,EAA2DvC,MAA3D,IAAqE,CAAzE,EAA4E,OAAO,IAAP;AACpF;;AACD,mBAAO,KAAP;AArDyC;AAsD5C,SAvHmC,CAyHpC;;;AACcI,QAAAA,YAAY,CAACqC,MAAD,EAAgCC,MAAhC,EAAyDC,UAAzD,EAAkG;AAAA;;AAAA;AACxH,gBAAMC,kBAAkB,SAAS;AAAA;AAAA,8BAAKlD,MAAL,CAAYmD,IAAZ,CAAiB,qBAAjB,EAAyC9E,MAAzC,CAAjC;AACA,gBAAMmC,SAAS,GAAGtC,WAAW,CAACgF,kBAAD,CAA7B;;AACA,YAAA,MAAI,CAACzD,IAAL,CAAU2D,QAAV,CAAmB5C,SAAnB;;AACA,gBAAM6C,YAAY,GAAG7C,SAAS,CAACZ,YAAV;AAAA;AAAA,6CAArB;AACA,kBAAMyD,YAAY,CAACC,aAAb,CACFP,MADE,EACOC,MADP,EACgBC,UADhB,EAC6B,MAD7B,CAAN;;AAGA,YAAA,MAAI,CAACxD,IAAL,CAAU8D,EAAV,CAAanF,aAAa,CAACoF,cAA3B,EAA4C,MAAM;AAC9ChD,cAAAA,SAAS,CAACd,MAAV,CAAiB+D,WAAjB,CAA6BjD,SAA7B;AACH,aAFD;;AAGA,YAAA,MAAI,CAACpB,gBAAL,CAAsBuC,IAAtB,CAA2B0B,YAA3B;AAXwH;AAY3H,SAtImC,CAwIpC;;;AACQlC,QAAAA,YAAY,GAAG;AACnB,eAAK1B,IAAL,CAAUC,MAAV,CAAiBC,cAAjB,CAAgC,cAAhC,EAAgD+D,MAAhD,GAAyD,KAAzD;AACA,eAAKjE,IAAL,CAAUC,MAAV,CAAiBC,cAAjB,CAAgC,cAAhC,EAAgD+D,MAAhD,GAAyD,IAAzD;AACH,SA5ImC,CA8IpC;;;AACQtC,QAAAA,QAAQ,GAAG;AACf,eAAK3B,IAAL,CAAUC,MAAV,CAAiBC,cAAjB,CAAgC,cAAhC,EAAgD+D,MAAhD,GAAyD,IAAzD;AACA,eAAKjE,IAAL,CAAUC,MAAV,CAAiBC,cAAjB,CAAgC,cAAhC,EAAgD+D,MAAhD,GAAyD,KAAzD;AACH;;AAlJmC,O","sourcesContent":["import { _decorator, Component, instantiate, math, Node, NodeEventType, Prefab, Sprite, SpriteFrame } from 'cc';\nimport { util } from '../../../util/util';\nimport { HolCharacter } from '../../../prefab/HolCharacter';\nimport { CharacterStateCreate } from '../../../game/fight/character/CharacterState';\nimport { HolNumber } from '../../../prefab/HolNumber';\nimport { RoundState } from '../../../game/fight/RoundState';\nimport { common } from '../../../common/common/common';\nimport { HolPreLoad } from '../../../prefab/HolPreLoad';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FightMap')\nexport class FightMap extends Component {\n\n    // 当前回合数\n    currentRound: number = 1\n\n    // 是否播放动画\n    isPlayAnimation: boolean = true\n\n    // 所有回合任务\n    allRoundQueue: Map<number , Function[]> = new Map\n\n    // 所有存活的角色\n    allLiveCharacter: HolCharacter[] = []\n\n    // 所有死亡的角色\n    allDeadCharacter: HolCharacter[] = []\n\n    // 行动等待队列，若队列有未完成任务则等待完成后进入下一个角色行动\n    actionAwaitQueue: Promise<any>[] = []\n\n    protected async start() {\n        // HolPreLoad 预加载进度条\n        const holPreLoad = this.node.parent.getChildByName(\"HolPreLoad\").getComponent(HolPreLoad)\n        holPreLoad.setTips([\n            \"战斗资源正在加载\" ,\n        ])\n        holPreLoad.setProcess(20)\n        // 随机地图\n        const images = await util.bundle.loadDir(\"image/fightMap\" , SpriteFrame)\n        this.node.getComponent(Sprite).spriteFrame = images[Math.floor(math.randomRange(0,images.length))]\n        holPreLoad.setProcess(50)\n        // 当前进度\n        let process = 50\n        // 设置角色\n        for (const character of common.leftCharacter) {\n            await this.setCharacter(character[1] , \"left\" , character[0])\n            holPreLoad.setProcess(process = process + 20 / common.leftCharacter.size)\n        }\n        for (const character of common.rightCharacter) {\n            await this.setCharacter(character[1] , \"right\" , character[0])\n            holPreLoad.setProcess(process = process + 20 / common.rightCharacter.size)\n        }\n        // 监听进度条完成函数\n        holPreLoad.listenComplete(async () => {\n            await new Promise(res => setTimeout(res, 500))\n            // 战斗开始\n            const result = await this.fightStart()\n            // 战斗胜利结算\n            if (result) this.fightSuccess()\n            // 战斗失败结算\n            else this.fightEnd()\n        })\n        // 设置 100%\n        holPreLoad.setProcess(100)\n    }\n\n    // 监听回合函数\n    public listenRoundEvent(round: number , call: Function) {\n        let roundEvents = this.allRoundQueue.get(this.currentRound + round + 1)\n        if (!roundEvents) \n            return this.allRoundQueue.set(this.currentRound + round + 1 , roundEvents = [call])\n        roundEvents.push(call)\n    }\n\n    // 战斗开始\n    private async fightStart(): Promise<boolean> {\n        // 调用战斗开始回调\n        for (const character of this.allLiveCharacter) {\n            for (const buff of character.state.buff) \n                await buff.OnFightBegan(buff , this)\n            for (const equipment of character.state.equipment) \n                await equipment.OnFightBegan(equipment , this)\n            await character.state.OnFightBegan(character.state , this)\n        }\n        // 回合开始\n        while(this.currentRound <= 150) {\n            const roundState = new RoundState\n            const allLiveCharacter = [].concat(this.allLiveCharacter).sort((a , b) => \n                b.state.speed - a.state.speed\n            )\n            // 调用回合任务\n            for (const task of this.allRoundQueue.get(this.currentRound) || []) await task()\n            // 调用回合开始回调\n            for (const character of allLiveCharacter) {\n                if (this.allLiveCharacter.indexOf(character) === -1) break\n                for (const buff of character.state.buff) \n                    await buff.OnRoundBegan(buff , roundState , this)\n                for (const equipment of character.state.equipment) \n                    await equipment.OnRoundBegan(equipment , roundState , this)\n                await character.state.OnRoundBegan(character.state , roundState , this)\n            }\n            // 角色行动\n            for (const character of allLiveCharacter) {\n                if (this.allLiveCharacter.indexOf(character) === -1) continue\n                await character.action()\n                // 等待行动队列清空\n                await Promise.all(this.actionAwaitQueue)\n                this.actionAwaitQueue = []\n                // 判断是否结束\n                if (this.allLiveCharacter.filter(c => c.direction === \"left\").length <= 0) return false\n                else if (this.allLiveCharacter.filter(c => c.direction === \"right\").length <= 0) return true\n            }\n            // 调用回合结束回调\n            for (const character of allLiveCharacter) {\n                if (this.allLiveCharacter.indexOf(character) === -1) break\n                for (const buff of character.state.buff) \n                    await buff.OnRoundEnd(buff , roundState , this)\n                for (const equipment of character.state.equipment) \n                    await equipment.OnRoundEnd(equipment , roundState , this)\n                await character.state.OnRoundEnd(character.state , roundState , this)\n            }\n            this.currentRound++\n            // 等待\n            if (this.isPlayAnimation) await new Promise(res => setTimeout(res, 300))\n            // 判断是否结束\n            if (this.allLiveCharacter.filter(c => c.direction === \"left\").length <= 0) return false\n            else if (this.allLiveCharacter.filter(c => c.direction === \"right\").length <= 0) return true\n        }\n        return false\n    }\n\n    // 设置角色\n    private async setCharacter(create: CharacterStateCreate , direct: \"left\"|\"right\" , coordinate: {row: number , col: number}) {\n        const holCharacterPrefab = await util.bundle.load(\"prefab/HolCharacter\" , Prefab)\n        const character = instantiate(holCharacterPrefab)\n        this.node.addChild(character)\n        const holCharacter = character.getComponent(HolCharacter)\n        await holCharacter.initCharacter(\n            create , direct , coordinate , this\n        )\n        this.node.on(NodeEventType.NODE_DESTROYED , () => {\n            character.parent.removeChild(character)\n        })\n        this.allLiveCharacter.push(holCharacter)\n    }\n\n    // 战斗胜利\n    private fightSuccess() {\n        this.node.parent.getChildByName(\"FightFailure\").active = false\n        this.node.parent.getChildByName(\"FightSuccess\").active = true\n    }\n\n    // 战斗失败\n    private fightEnd() {\n        this.node.parent.getChildByName(\"FightFailure\").active = true\n        this.node.parent.getChildByName(\"FightSuccess\").active = false\n    }\n}\n\n"]}