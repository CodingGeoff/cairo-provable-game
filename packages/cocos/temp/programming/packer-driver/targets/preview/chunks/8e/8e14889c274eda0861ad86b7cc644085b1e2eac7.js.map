{"version":3,"sources":["file:///Users/ruoyan/Desktop/WorkSpace/cairo-provable-game/packages/cocos/assets/script/prefab/HolConfirmMessage.ts"],"names":["_decorator","Component","Label","Node","Toggle","ccclass","property","HolConfirmMessage","$sureQueue","$cancelQueue","$closeQueue","setContent","co","node","getChildByName","getComponent","string","title","message","replace","ContentNode","selectBoxMessage","radioNode","active","on","selectBoxCallback","isChecked","concat","Array","from","sureQueue","cancelQueue","closeQueue","listen","event","callback","push","sure","forEach","c","cancel","closeConfirm"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventHandheld, Label, Node, Toggle } from 'cc';\nconst { ccclass, property } = _decorator;\n\n// 内容选项\nexport type ContentOption = {\n    title?: string // 标题\n    message: string // 内容\n    selectBoxMessage?: string // 选择框内容\n    selectBoxCallback?: (t: boolean) => any // 选择框\n    sureQueue? :(() => any)[] // 确定的回调\n    cancelQueue? :(() => any)[] // 取消的回调\n    closeQueue? :(() => any)[] // 关闭的回调\n}\n\n@ccclass('HolConfirmMessage')\nexport class HolConfirmMessage extends Component {\n\n    // 内容节点\n    @property(Node)\n    ContentNode: Node\n\n    /** \n     * 所有确定时的回调 \n     * 两个按钮并不会有任何行为，但是可以绑定对应的行为\n     */\n    private $sureQueue: (() => any)[] = []\n\n    /** \n     * 所有确定时的回调 \n     * 两个按钮并不会有任何行为，但是可以绑定对应的行为\n     */\n    private $cancelQueue: (() => any)[] = []\n    \n    /** \n     * 所有关闭时的回调 \n     * 本质上关闭不会进行任何操作\n     * 可以设置关闭回调来指定关闭时的行为\n     */\n    private $closeQueue: (() => any)[] = []\n\n    /** \n     * 设置确认框内容\n     * 具体参数信息可以参考ContentOption类型\n     */\n    setContent(co: ContentOption) {\n        // 标题\n        this.node.getChildByName(\"Title\").getComponent(Label).string = co.title || \"标题\"\n        // 清空空格\n        co.message = co.message.replace(/ /ig , \"\")\n        co.message = co.message.replace(/&nbsp;/ig , \" \")\n        // 内容\n        this.ContentNode.getComponent(Label).string = co.message\n        // 选择框内容\n        if (co.selectBoxMessage) {\n            const radioNode = this.node.getChildByName(\"Radio\")\n            radioNode.active = true\n            radioNode.getChildByName(\"RadioMessage\").getComponent(Label).string = \n                co.selectBoxMessage\n            radioNode.on(\"click\" , () => { co.selectBoxCallback && co.selectBoxCallback(radioNode.getComponent(Toggle).isChecked) })\n        }\n        // 事件\n        this.$sureQueue.concat(Array.from(co.sureQueue || []))\n        this.$cancelQueue.concat(Array.from(co.cancelQueue || []))\n        this.$closeQueue.concat(Array.from(co.closeQueue || []))\n    }\n\n    /** \n     * 绑定事件到对应的回调队列\n     * sure 绑定确定的回调\n     * cancel 绑定取消的回调\n     * close 绑定关闭的回调\n     */\n    listen(event: \"sure\"|\"cancel\"|\"close\" , callback: () => any) {\n        if (event === \"sure\") return this.$sureQueue.push(callback)\n        if (event === \"cancel\") return this.$cancelQueue.push(callback)\n        if (event === \"close\") return this.$closeQueue.push(callback)\n    }\n\n    /** \n     * 确认按钮点击事件\n     */\n    sure() { this.$sureQueue.forEach(c => c()) }\n\n    /** \n     * 取消按钮点击事件\n     */\n    cancel() { this.$cancelQueue.forEach(c => c()) }\n\n    /** \n     * 关闭本界面\n     */\n    closeConfirm() { this.$closeQueue.forEach(c => c()) }\n}\n\n"]}