{"version":3,"sources":["file:///Users/ruoyan/Desktop/WorkSpace/LegendOfWarcraftHeroes/assets/script/prefab/HolNumber.ts"],"names":["_decorator","Component","math","Node","Sprite","SpriteFrame","UITransform","util","ccclass","property","HolNumber","$color","Color","$number","$frontSize","color","n","node","children","forEach","c","getComponent","number","Math","ceil","renderNumber","frontSize","then","size","removeAllChildren","abs","replace","half","floor","length","numbers","bundle","loadDir","i","addChild","s","addComponent","spriteFrame","filter","name","charAt","setContentSize","Size","distance","setPosition","position","z"],"mappings":"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","sourcesContent":["import { _decorator, Component, math, Node, Sprite, SpriteFrame, UITransform } from 'cc';\nimport { util } from '../util/util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('HolNumber')\nexport class HolNumber extends Component {\n\n    // 颜色\n    private $color: math.Color = new math.Color(255,255,255,255)\n    public get color() {\n        return this.$color\n    }\n    public set color(n: math.Color) {\n        this.$color = n\n        this.node.children.forEach(c => {\n            c.getComponent(Sprite).color = this.$color\n        })\n    }\n\n    // 设置数字\n    private $number: number = 0\n    public get number() {\n        return this.$number\n    }\n    public set number(n: number) {\n        this.$number = Math.ceil(n)\n        this.renderNumber(this.$number , this.frontSize).then()\n    }\n\n    // 字体大小\n    private $frontSize: number = 28\n    public get frontSize() {\n        return this.$frontSize\n    }\n    public set frontSize(n: number) {\n        this.$frontSize = n\n    }\n\n    // 渲染函数\n    private async renderNumber(n: number , size: number) {\n        this.node.removeAllChildren()\n        const abs = ((n > 0 ? \"+\" : \"-\") + n + \"\").replace(\"--\" , \"-\")\n        const half = Math.floor(abs.length / 2)\n        const numbers = await util.bundle.loadDir(\"image/number\" , SpriteFrame)\n        for (let i = 0; i < abs.length; i++) {\n            const node = new Node\n            this.node.addChild(node)\n            const s = node.addComponent(Sprite)\n            s.spriteFrame = numbers.filter(s => s.name === abs.charAt(i))[0]\n            if (abs.charAt(i) !== \"-\") s.getComponent(UITransform).setContentSize(new math.Size(size , size))\n            const distance = size - size * 0.3\n            if (i < half) {\n                node.setPosition(-distance * (half - i) , 0 , node.position.z)\n            } else {\n                node.setPosition(distance * (i - half) , 0 , node.position.z)\n            }\n            node.getComponent(Sprite).color = this.$color\n        }\n        return\n    }\n}\n\n"]}