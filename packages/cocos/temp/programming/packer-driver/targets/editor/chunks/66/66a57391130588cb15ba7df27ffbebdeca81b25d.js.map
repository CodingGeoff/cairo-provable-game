{"version":3,"sources":["file:///Users/ruoyan/Desktop/WorkSpace/cairo-provable-game/packages/cocos/assets/script/scenes/Home/HomeCanvas.ts"],"names":["_decorator","AudioClip","AudioSource","Component","util","getConfig","ccclass","property","HomeCanvas","start","close","message","load","initMusic","config","musics","bundle","loadDir","music","Math","floor","length","random","audioSource","node","getComponent","clip","volume","volumeDetail","home","play"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,S,OAAAA,S;;AACpCC,MAAAA,I,iBAAAA,I;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;4BAGjBQ,U,WADZF,OAAO,CAAC,YAAD,C,gBAAR,MACaE,UADb,SACgCL,SADhC,CAC0C;AAEjB,cAALM,KAAK,GAAG;AAEpB,gBAAMC,KAAK,GAAG,MAAM;AAAA;AAAA,4BAAKC,OAAL,CAAaC,IAAb,CAAkB,EAAlB,CAApB,CAFoB,CAIpB;;AACA,gBAAM,KAAKC,SAAL,EAAN;AAEAH,UAAAA,KAAK;AACR,SAVqC,CAYtC;;;AACuB,cAATG,SAAS,GAAG;AACtB,gBAAMC,MAAM,GAAG;AAAA;AAAA,uCAAf,CADsB,CAEtB;;AACA,gBAAMC,MAAM,GAAG,MAAM;AAAA;AAAA,4BAAKC,MAAL,CAAYC,OAAZ,CAA+B,YAA/B,EAA8ChB,SAA9C,CAArB;AACA,gBAAMiB,KAAK,GAAGH,MAAM,CAACI,IAAI,CAACC,KAAL,CAAWL,MAAM,CAACM,MAAP,GAAgBF,IAAI,CAACG,MAAL,EAA3B,CAAD,CAApB;AACA,gBAAMC,WAAW,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBvB,WAAvB,CAApB;AACAqB,UAAAA,WAAW,CAACG,IAAZ,GAAmBR,KAAnB;AACAK,UAAAA,WAAW,CAACI,MAAZ,GAAqBb,MAAM,CAACa,MAAP,GAAgBb,MAAM,CAACc,YAAP,CAAoBC,IAAzD;AACAN,UAAAA,WAAW,CAACO,IAAZ;AACH;;AAtBqC,O","sourcesContent":["import { _decorator, AudioClip, AudioSource, Component, EventTouch, math, Node, screen } from 'cc';\nimport { util } from '../../util/util';\nimport { getConfig } from '../../common/config/config';\nconst { ccclass, property } = _decorator;\n\n@ccclass('HomeCanvas')\nexport class HomeCanvas extends Component {\n\n    protected async start() {\n\n        const close = await util.message.load({})\n\n        // 初始化音乐\n        await this.initMusic()\n\n        close()\n    }\n\n    // 初始化播放音乐\n    private async initMusic() {\n        const config = getConfig()\n        // 音乐们\n        const musics = await util.bundle.loadDir<AudioClip>(\"sound/home\" , AudioClip)\n        const music = musics[Math.floor(musics.length * Math.random())]\n        const audioSource = this.node.getComponent(AudioSource)\n        audioSource.clip = music\n        audioSource.volume = config.volume * config.volumeDetail.home\n        audioSource.play()\n    }\n}\n\n"]}