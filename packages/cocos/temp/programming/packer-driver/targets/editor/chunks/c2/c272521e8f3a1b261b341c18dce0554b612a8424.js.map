{"version":3,"sources":["file:///Users/ruoyan/Desktop/WorkSpace/LegendOfWarcraftHeroes/assets/script/game/fight_entity/character/fearOfDemons.ts"],"names":["GetCharacterCoordinatePosition","util","RegisterCharacter","CharacterMetaState","BuffState","Character","id","name","AnimationDir","AvatarPath","AnimationType","AnimationScale","HpGrowth","AttackGrowth","DefenceGrowth","PierceGrowth","SpeedGrowth","Energy","CharacterCamp","CharacterQuality","PassiveIntroduceOne","replace","PassiveIntroduceTwo","SkillIntroduce","OnCreateState","self","star","attack","pierce","GetOnAttack","actionState","fightMap","enemies","component","getEnimies","allLiveCharacter","length","sort","a","b","coordinate","col","targets","push","state","isPlayAnimation","sundry","moveNodeToPosition","node","targetPosition","direction","row","moveCurve","moveTimeScale","holAnimation","timeScale","playAnimation","defaultState","target","Math","random","fearBuff","addBuff","listenRoundEvent","deleteBuff","actionAwaitQueue","GetOnSkill","floor","bleedBuff","roundReduceBleed"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,8B,iBAAAA,8B;;AAEAC,MAAAA,I,iBAAAA,I;;AAGAC,MAAAA,iB,iBAAAA,iB;;AACAC,MAAAA,kB,iBAAAA,kB;;AAEAC,MAAAA,S,iBAAAA,S;;;;;;;;;2BAIIC,S,WADZ;AAAA;AAAA,kDAAkB;AAACC,QAAAA,EAAE,EAAE;AAAL,OAAlB,C,gBAAD,MACaD,SADb;AAAA;AAAA,oDACkD;AAAA;AAAA;AAAA,eAE9CE,IAF8C,GAE/B,IAF+B;AAAA,eAI9CC,YAJ8C,GAIvB,0CAJuB;AAAA,eAM9CC,UAN8C,GAMzB,6DANyB;AAAA,eAQ9CC,aAR8C,GAQJ,OARI;AAAA,eAU9CC,cAV8C,GAUrB,IAVqB;AAAA,eAY9CC,QAZ8C,GAY3B,EAZ2B;AAAA,eAc9CC,YAd8C,GAcvB,EAduB;AAAA,eAgB9CC,aAhB8C,GAgBtB,EAhBsB;AAAA,eAkB9CC,YAlB8C,GAkBvB,EAlBuB;AAAA,eAoB9CC,WApB8C,GAoBxB,EApBwB;AAAA,eAsB9CC,MAtB8C,GAsB7B,EAtB6B;AAAA,eAwB9CC,aAxB8C,GAwBmC,MAxBnC;AAAA,eA0B9CC,gBA1B8C,GA0BnB,CA1BmB;AAAA,eA4B9CC,mBA5B8C,GA4Bf;AACnC;AACA;AACA;AACA,KAJkC,CAI5BC,OAJ4B,CAIpB,KAJoB,EAIZ,EAJY,CA5BgB;AAAA,eAkC9CC,mBAlC8C,GAkCf;AACnC;AACA;AACA;AACA,KAJkC,CAI5BD,OAJ4B,CAIpB,KAJoB,EAIZ,EAJY,CAlCgB;AAAA,eAwC9CE,cAxC8C,GAwCpB;AAC9B;AACA;AACA;AACA,KAJ6B,CAIvBF,OAJuB,CAIf,KAJe,EAIP,EAJO,CAxCqB;AAAA;;AA8C9CG,QAAAA,aAAa,CAACC,IAAD,EAA6B;AACtC,cAAIA,IAAI,CAACC,IAAL,IAAa,CAAjB,EAAoB;AAChBD,YAAAA,IAAI,CAACE,MAAL,IAAe,GAAf;AACAF,YAAAA,IAAI,CAACG,MAAL,IAAe,GAAf;AACH;;AACD,cAAIH,IAAI,CAACC,IAAL,IAAa,CAAjB,EAAoB;AAChBD,YAAAA,IAAI,CAACE,MAAL,IAAe,IAAf;AACH;AACJ;;AAEDE,QAAAA,WAAW,GAA0F;AACjG,iBAAO,OAAOJ,IAAP,EAA6BK,WAA7B,EAAuDC,QAAvD,KAA8E;AACjF,gBAAIC,OAAO,GAAGP,IAAI,CAACQ,SAAL,CAAeC,UAAf,CAA0BH,QAAQ,CAACI,gBAAnC,CAAd;AACA,gBAAIH,OAAO,CAACI,MAAR,IAAkB,CAAtB,EAAyB;AACzBJ,YAAAA,OAAO,GAAGA,OAAO,CAACK,IAAR,CAAa,CAACC,CAAD,EAAKC,CAAL,KAAWD,CAAC,CAACE,UAAF,CAAaC,GAAb,GAAmBF,CAAC,CAACC,UAAF,CAAaC,GAAxD,CAAV;AACAX,YAAAA,WAAW,CAACY,OAAZ,CAAoBC,IAApB,CAAyBX,OAAO,CAAC,CAAD,CAAP,CAAWY,KAApC,EAJiF,CAKjF;;AACA,gBAAIb,QAAQ,CAACc,eAAb,EAA8B;AAC1B,oBAAM;AAAA;AAAA,gCAAKC,MAAL,CAAYC,kBAAZ,CACFtB,IAAI,CAACQ,SAAL,CAAee,IADb,EAEF;AACIC,gBAAAA,cAAc,EAAE;AAAA;AAAA,sFACZnB,WAAW,CAACY,OAAZ,CAAoB,CAApB,EAAuBT,SAAvB,CAAiCiB,SADrB,EAEZpB,WAAW,CAACY,OAAZ,CAAoB,CAApB,EAAuBT,SAAvB,CAAiCO,UAAjC,CAA4CW,GAFhC,EAGZrB,WAAW,CAACY,OAAZ,CAAoB,CAApB,EAAuBT,SAAvB,CAAiCO,UAAjC,CAA4CC,GAHhC,EAIZ,QAJY,CADpB;AAOIW,gBAAAA,SAAS,EAAE,IAPf;AAQIC,gBAAAA,aAAa,EAAEvB,WAAW,CAACY,OAAZ,CAAoB,CAApB,EAAuBT,SAAvB,CAAiCqB,YAAjC,CAA8CC;AARjE,eAFE,CAAN;AAaA,oBAAM9B,IAAI,CAACQ,SAAL,CAAeqB,YAAf,CAA4BE,aAA5B,CAA0C,QAA1C,EAAqD,CAArD,EAAyD/B,IAAI,CAACQ,SAAL,CAAewB,YAAxE,CAAN;AACH,aArBgF,CAsBjF;;;AACA,iBAAK,MAAMC,MAAX,IAAqB5B,WAAW,CAACY,OAAjC,EAA0C;AACtC;AACA,kBAAIjB,IAAI,CAACC,IAAL,IAAa,CAAb,IAAkBiC,IAAI,CAACC,MAAL,KAAgB,GAAtC,EAA2C;AACvC,sBAAMC,QAAQ,GAAG;AAAA;AAAA,4CAAc;AAACvD,kBAAAA,EAAE,EAAE;AAAL,iBAAd,CAAjB;AACAoD,gBAAAA,MAAM,CAACzB,SAAP,CAAiB6B,OAAjB,CAAyBrC,IAAI,CAACQ,SAA9B,EAA0C4B,QAA1C;AACA9B,gBAAAA,QAAQ,CAACgC,gBAAT,CAA2B,CAA3B,EAA+B,MAAML,MAAM,CAACzB,SAAP,CAAiB+B,UAAjB,CAA4BH,QAA5B,CAArC;AACH,eANqC,CAOtC;;;AACA9B,cAAAA,QAAQ,CAACkC,gBAAT,CAA0BtB,IAA1B,CACIlB,IAAI,CAACQ,SAAL,CAAeN,MAAf,CAAsBF,IAAI,CAACE,MAAL,GAAc,CAApC,EAAwC+B,MAAM,CAACzB,SAA/C,CADJ;AAGH,aAlCgF,CAmCjF;;;AACA,gBAAIF,QAAQ,CAACc,eAAb,EAA8B;AAC1B,oBAAM;AAAA;AAAA,gCAAKC,MAAL,CAAYC,kBAAZ,CACFtB,IAAI,CAACQ,SAAL,CAAee,IADb,EAEF;AACIC,gBAAAA,cAAc,EAAE;AAAA;AAAA,sFACZxB,IAAI,CAACQ,SAAL,CAAeiB,SADH,EAEZzB,IAAI,CAACQ,SAAL,CAAeO,UAAf,CAA0BW,GAFd,EAGZ1B,IAAI,CAACQ,SAAL,CAAeO,UAAf,CAA0BC,GAHd,EAIZ,UAJY,CADpB;AAOIW,gBAAAA,SAAS,EAAE,IAPf;AAQIC,gBAAAA,aAAa,EAAE5B,IAAI,CAACQ,SAAL,CAAeqB,YAAf,CAA4BC;AAR/C,eAFE,CAAN;AAaH;;AACD;AACH,WApDD;AAqDH;;AAEDW,QAAAA,UAAU,GAA0F;AAChG,iBAAO,OAAOzC,IAAP,EAA6BK,WAA7B,EAAuDC,QAAvD,KAA8E;AACjF,gBAAIC,OAAO,GAAGP,IAAI,CAACQ,SAAL,CAAeC,UAAf,CAA0BH,QAAQ,CAACI,gBAAnC,CAAd;AACA,gBAAIH,OAAO,CAACI,MAAR,IAAkB,CAAtB,EAAyB;AACzBN,YAAAA,WAAW,CAACY,OAAZ,CAAoBC,IAApB,CAAyBX,OAAO,CAAC2B,IAAI,CAACQ,KAAL,CAAWnC,OAAO,CAACI,MAAR,GAAiBuB,IAAI,CAACC,MAAL,EAA5B,CAAD,CAAP,CAAoDhB,KAA7E,EAHiF,CAIjF;;AACA,gBAAIb,QAAQ,CAACc,eAAb,EAA8B;AAC1B,oBAAM;AAAA;AAAA,gCAAKC,MAAL,CAAYC,kBAAZ,CACFtB,IAAI,CAACQ,SAAL,CAAee,IADb,EAEF;AACIC,gBAAAA,cAAc,EAAE;AAAA;AAAA,sFACZnB,WAAW,CAACY,OAAZ,CAAoB,CAApB,EAAuBT,SAAvB,CAAiCiB,SADrB,EAEZpB,WAAW,CAACY,OAAZ,CAAoB,CAApB,EAAuBT,SAAvB,CAAiCO,UAAjC,CAA4CW,GAFhC,EAGZrB,WAAW,CAACY,OAAZ,CAAoB,CAApB,EAAuBT,SAAvB,CAAiCO,UAAjC,CAA4CC,GAHhC,EAIZ,QAJY,CADpB;AAOIW,gBAAAA,SAAS,EAAE,KAPf;AAQIC,gBAAAA,aAAa,EAAEvB,WAAW,CAACY,OAAZ,CAAoB,CAApB,EAAuBT,SAAvB,CAAiCqB,YAAjC,CAA8CC;AARjE,eAFE,CAAN;AAaA,oBAAM9B,IAAI,CAACQ,SAAL,CAAeqB,YAAf,CAA4BE,aAA5B,CAA0C,OAA1C,EAAoD,CAApD,EAAwD/B,IAAI,CAACQ,SAAL,CAAewB,YAAvE,CAAN;AACH,aApBgF,CAqBjF;;;AACA,iBAAK,MAAMC,MAAX,IAAqB5B,WAAW,CAACY,OAAjC,EAA0C;AACtC;AACA,oBAAM0B,SAAS,GAAG;AAAA;AAAA,0CAAc;AAAC9D,gBAAAA,EAAE,EAAE;AAAL,eAAd,EAA8B;AAC5C+D,gBAAAA,gBAAgB,EAAE5C,IAAI,CAACE,MAAL,GAAc;AADY,eAA9B,CAAlB;AAGA+B,cAAAA,MAAM,CAACzB,SAAP,CAAiB6B,OAAjB,CAAyBrC,IAAI,CAACQ,SAA9B,EAA0CmC,SAA1C,EALsC,CAMtC;;AACArC,cAAAA,QAAQ,CAACgC,gBAAT,CAA0B,CAA1B,EAA8B,MAAML,MAAM,CAACzB,SAAP,CAAiB+B,UAAjB,CAA4BI,SAA5B,CAApC,EAPsC,CAQtC;;AACArC,cAAAA,QAAQ,CAACkC,gBAAT,CAA0BtB,IAA1B,CACIlB,IAAI,CAACQ,SAAL,CAAeN,MAAf,CAAsBF,IAAI,CAACE,MAAL,GAAc,GAApC,EAA0C+B,MAAM,CAACzB,SAAjD,CADJ;AAGH,aAlCgF,CAmCjF;;;AACA,gBAAIF,QAAQ,CAACc,eAAb,EAA8B;AAC1B,oBAAM;AAAA;AAAA,gCAAKC,MAAL,CAAYC,kBAAZ,CACFtB,IAAI,CAACQ,SAAL,CAAee,IADb,EAEF;AACIC,gBAAAA,cAAc,EAAE;AAAA;AAAA,sFACZxB,IAAI,CAACQ,SAAL,CAAeiB,SADH,EAEZzB,IAAI,CAACQ,SAAL,CAAeO,UAAf,CAA0BW,GAFd,EAGZ1B,IAAI,CAACQ,SAAL,CAAeO,UAAf,CAA0BC,GAHd,EAIZ,UAJY,CADpB;AAOIW,gBAAAA,SAAS,EAAE,IAPf;AAQIC,gBAAAA,aAAa,EAAE5B,IAAI,CAACQ,SAAL,CAAeqB,YAAf,CAA4BC;AAR/C,eAFE,CAAN;AAaH;;AACD;AACH,WApDD;AAqDH;;AAtK6C,O","sourcesContent":["import { math } from \"cc\";\nimport { GetCharacterCoordinatePosition } from \"../../../prefab/HolCharacter\";\nimport { FightMap } from \"../../../scenes/Fight/Canvas/FightMap\";\nimport { util } from \"../../../util/util\";\nimport { ActionState } from \"../../fight/ActionState\";\nimport { BasicState } from \"../../fight/BasicState\";\nimport { RegisterCharacter } from \"../../fight/character/CharacterEnum\";\nimport { CharacterMetaState } from \"../../fight/character/CharacterMetaState\";\nimport { CharacterState } from \"../../fight/character/CharacterState\";\nimport { BuffState } from \"../../fight/buff/BuffState\";\n\n\n@RegisterCharacter({id: \"fearOfDemons\"})\nexport class Character extends CharacterMetaState {\n\n    name: string = \"恐魔\"\n\n    AnimationDir: string = \"game/fight_entity/character/fearOfDemons\"\n\n    AvatarPath: string = \"game/fight_entity/character/fearOfDemons/avatar/spriteFrame\"\n\n    AnimationType: \"DrangonBones\" | \"Spine\" = \"Spine\"\n\n    AnimationScale: number = 0.65\n    \n    HpGrowth: number = 45\n\n    AttackGrowth: number = 30\n\n    DefenceGrowth: number = 15\n\n    PierceGrowth: number = 15\n\n    SpeedGrowth: number = 17\n\n    Energy: number = 90\n\n    CharacterCamp: \"ordinary\" | \"nature\" | \"abyss\" | \"dark\" | \"machine\" | \"sacred\" = \"dark\"\n\n    CharacterQuality: number = 4\n\n    PassiveIntroduceOne: string = `\n    \n    额外获得 20% 攻击力\n    额外获得 20% 护甲穿透\n    `.replace(/ /ig , \"\")\n\n    PassiveIntroduceTwo: string = `\n    \n    额外获得 15% 攻击力\n    普通攻击有20%的概率会恐惧敌人 持续两回合\n    `.replace(/ /ig , \"\")\n\n    SkillIntroduce: string = `\n    \n    对一个随机敌人造成150%攻击力的伤害\n    并且造成 50% 攻击力的流血2回合\n    `.replace(/ /ig , \"\")\n\n    OnCreateState(self: CharacterState): void {\n        if (self.star >= 2) {\n            self.attack *= 1.2\n            self.pierce *= 1.2\n        }\n        if (self.star >= 4) {\n            self.attack *= 1.15\n        }\n    }\n\n    GetOnAttack(): (self: BasicState<any>, actionState: ActionState, fightMap: FightMap) => Promise<any> {\n        return async (self: CharacterState, actionState: ActionState, fightMap: FightMap) => {\n            let enemies = self.component.getEnimies(fightMap.allLiveCharacter)\n            if (enemies.length <= 0) return\n            enemies = enemies.sort((a , b) => a.coordinate.col - b.coordinate.col)\n            actionState.targets.push(enemies[0].state)\n            // 播放动画\n            if (fightMap.isPlayAnimation) {\n                await util.sundry.moveNodeToPosition(\n                    self.component.node ,\n                    {\n                        targetPosition: GetCharacterCoordinatePosition(\n                            actionState.targets[0].component.direction ,\n                            actionState.targets[0].component.coordinate.row , \n                            actionState.targets[0].component.coordinate.col ,\n                            \"attack\"\n                        ) ,\n                        moveCurve: true ,\n                        moveTimeScale: actionState.targets[0].component.holAnimation.timeScale\n                    }\n                )\n                await self.component.holAnimation.playAnimation(\"attack\" , 1 , self.component.defaultState)\n            }\n            // 结算\n            for (const target of actionState.targets) {\n                // 添加恐惧\n                if (self.star >= 4 && Math.random() < 0.2) {\n                    const fearBuff = new BuffState({id: \"fear\"})\n                    target.component.addBuff(self.component , fearBuff)\n                    fightMap.listenRoundEvent( 2 , () => target.component.deleteBuff(fearBuff))\n                }\n                // 攻击\n                fightMap.actionAwaitQueue.push(\n                    self.component.attack(self.attack * 1 , target.component)\n                )\n            }\n            // 播放动画\n            if (fightMap.isPlayAnimation) {\n                await util.sundry.moveNodeToPosition(\n                    self.component.node ,\n                    {\n                        targetPosition: GetCharacterCoordinatePosition(\n                            self.component.direction ,\n                            self.component.coordinate.row , \n                            self.component.coordinate.col ,\n                            \"ordinary\"\n                        ) ,\n                        moveCurve: true ,\n                        moveTimeScale: self.component.holAnimation.timeScale\n                    }\n                )\n            }\n            return\n        }\n    }\n\n    GetOnSkill(): (self: BasicState<any>, actionState: ActionState, fightMap: FightMap) => Promise<any> {\n        return async (self: CharacterState, actionState: ActionState, fightMap: FightMap) => {\n            let enemies = self.component.getEnimies(fightMap.allLiveCharacter)\n            if (enemies.length <= 0) return\n            actionState.targets.push(enemies[Math.floor(enemies.length * Math.random())].state)\n            // 播放动画\n            if (fightMap.isPlayAnimation) {\n                await util.sundry.moveNodeToPosition(\n                    self.component.node ,\n                    {\n                        targetPosition: GetCharacterCoordinatePosition(\n                            actionState.targets[0].component.direction ,\n                            actionState.targets[0].component.coordinate.row , \n                            actionState.targets[0].component.coordinate.col ,\n                            \"attack\"\n                        ) ,\n                        moveCurve: false ,\n                        moveTimeScale: actionState.targets[0].component.holAnimation.timeScale\n                    }\n                )\n                await self.component.holAnimation.playAnimation(\"skill\" , 1 , self.component.defaultState)\n            }\n            // 结算\n            for (const target of actionState.targets) {\n                // 添加流血 TODO\n                const bleedBuff = new BuffState({id: \"bleed\"} , {\n                    roundReduceBleed: self.attack * 0.5\n                })\n                target.component.addBuff(self.component , bleedBuff)\n                // 两回合后去掉\n                fightMap.listenRoundEvent(2 , () => target.component.deleteBuff(bleedBuff) )\n                // 攻击\n                fightMap.actionAwaitQueue.push(\n                    self.component.attack(self.attack * 1.5 , target.component)\n                )\n            }\n            // 播放动画\n            if (fightMap.isPlayAnimation) {\n                await util.sundry.moveNodeToPosition(\n                    self.component.node ,\n                    {\n                        targetPosition: GetCharacterCoordinatePosition(\n                            self.component.direction ,\n                            self.component.coordinate.row , \n                            self.component.coordinate.col ,\n                            \"ordinary\"\n                        ) ,\n                        moveCurve: true ,\n                        moveTimeScale: self.component.holAnimation.timeScale\n                    }\n                )\n            }\n            return\n        }\n    }\n\n}"]}