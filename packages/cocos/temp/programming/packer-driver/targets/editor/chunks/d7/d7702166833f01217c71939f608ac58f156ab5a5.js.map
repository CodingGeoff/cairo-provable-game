{"version":3,"sources":["file:///Users/ruoyan/Desktop/WorkSpace/cairo-provable-game/packages/cocos/assets/script/prefab/HolAnimation.ts"],"names":["_decorator","Component","dragonBones","resources","sp","util","ccclass","property","HolAnimation","$animationControl","$lastAnimationPromiseResFunc","timeScale","v","initBones","animationOption","animationDir","bundle","loadDir","undefined","animationBundle","node","setScale","animationScale","position","z","setPosition","x","animationPosition","y","animationType","addComponent","ArmatureDisplay","Skeleton","file","DragonBonesAsset","dragonAsset","DragonBonesAtlasAsset","dragonAtlasAsset","SkeletonData","skeletonData","armatureName","JSON","parse","dragonBonesJson","armature","name","playAnimation","times","defaultState","Promise","res","playTimes","setAnimation","setCompleteListener","on","EventObject","COMPLETE"],"mappings":"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","sourcesContent":["import { _decorator, AssetManager, Component, dragonBones, Node, resources, sp } from 'cc';\nimport { util } from '../util/util';\nconst { ccclass, property } = _decorator;\n\n// 设置动画配置\nexport type HolAnimationOption = {\n    // 动画文件夹\n    animationDir: string\n    // 对应的bundle默认resources\n    animationBundle?: AssetManager.Bundle\n    // 缩放值\n    animationScale?: number\n    // 动画类型\n    animationType: \"DrangonBones\" | \"Spine\" \n    // 动画位置\n    animationPosition: {x: number , y: number}\n}\n\n@ccclass('HolAnimation')\nexport class HolAnimation extends Component {\n\n    // 动画速度\n    public get timeScale() { return this.$animationControl.timeScale }\n    public set timeScale(v: number) { this.$animationControl.timeScale = v }\n\n    // 动画控制器\n    private $animationControl: sp.Skeleton | dragonBones.ArmatureDisplay\n\n    // 上一个动画\n    private $lastAnimationPromiseResFunc: Function = null\n\n    /** \n     * 设置动画\n     * 会自动根据参数适应龙骨或Spine动画\n     */\n    async initBones(animationOption: HolAnimationOption) {\n        const animationDir = await util.bundle.loadDir(\n            animationOption.animationDir , \n            undefined , \n            animationOption.animationBundle || resources\n        )\n        // 设置缩放\n        this.node.setScale(\n            animationOption.animationScale || 1 , \n            animationOption.animationScale || 1 ,\n            this.node.position.z\n        )\n        // 设置位置\n        this.node.setPosition(\n            this.node.position.x + animationOption.animationPosition.x ,\n            this.node.position.y + animationOption.animationPosition.y ,\n            this.node.position.z\n        )\n        // 动画分类\n        if (animationOption.animationType === \"DrangonBones\") \n            this.$animationControl = this.node.addComponent(dragonBones.ArmatureDisplay)\n        else if (animationOption.animationType === \"Spine\") \n            this.$animationControl = this.node.addComponent(sp.Skeleton)\n        // 加上控制器\n        for (const file of animationDir) {\n            if (this.$animationControl instanceof dragonBones.ArmatureDisplay) {\n                if (file instanceof dragonBones.DragonBonesAsset)\n                    this.$animationControl.dragonAsset = file\n                else if (file instanceof dragonBones.DragonBonesAtlasAsset)\n                    this.$animationControl.dragonAtlasAsset = file\n            } else if (this.$animationControl instanceof sp.Skeleton) {\n                if (file instanceof sp.SkeletonData)\n                    this.$animationControl.skeletonData = file\n            }\n        }\n        if (this.$animationControl instanceof dragonBones.ArmatureDisplay)\n            this.$animationControl.armatureName = \n                JSON.parse(this.$animationControl.dragonAsset?.dragonBonesJson!).armature[0].name;\n        return\n    }\n\n    /** \n     * name 表示动画名称\n     * times 动画播放次数\n     * 该函数会等待动画播放完成\n     */\n    async playAnimation(name: string , times: number = -1 , defaultState?: string) {\n        // 如果上一次的动画还没有完成\n        if (this.$lastAnimationPromiseResFunc) {\n            this.$lastAnimationPromiseResFunc()\n            this.$lastAnimationPromiseResFunc = null\n        }\n        return new Promise<void>(res => {\n            if (this.$animationControl instanceof sp.Skeleton) {\n                let playTimes = 0\n                this.$animationControl.setAnimation(0 , name , false)\n                this.$animationControl.setCompleteListener(() => {\n                    if (++playTimes >= times && times !== -1) {\n                        this.$lastAnimationPromiseResFunc = null\n                        res()\n                        if(defaultState) this.playAnimation(defaultState)\n                        return \n                    }\n                    if (this.$animationControl instanceof sp.Skeleton)\n                        this.$animationControl.setAnimation(0 , name , false)\n                })\n            } else if (this.$animationControl instanceof dragonBones.ArmatureDisplay) {\n                this.$animationControl.playAnimation(name , times)\n                this.$animationControl.on(dragonBones.EventObject.COMPLETE , () => {\n                    this.$lastAnimationPromiseResFunc = null\n                    res()\n                    if(defaultState) this.playAnimation(defaultState)\n                } , this)\n            }\n            this.$lastAnimationPromiseResFunc = res\n        })\n    }\n\n}\n\n"]}